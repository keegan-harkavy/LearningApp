from pathlib import Path
from openai import OpenAI
import openai
import os
from flask import Blueprint, render_template, request, flash, redirect, url_for
from flask_login import login_required, current_user
from .models import User
from api_keys import GPT_KEY, STABILITY_KEY

create_audio = Blueprint('create_audio', __name__)

texts = {'0':"Welcome! Are you ready to start your very own learning adventure? In this short demo you will get the chance to choose some cool images and learn about the sounds that make up words",
        '1':"Meet George. George is a 2nd grader struggling with how to pronounce certain words. George wants to know what movies, books, or superheroes series you like so he can learn from you about different letter sounds!",
        '2':"What's your all-time favorite movie or book franchise? Think of epic stories like Star Wars, Harry Potter, Marvel or DC! Or you can simply say, “superheroes!” Share with George! Enter franchise name then choose an action you want those characters to preform!   ",
        '4':"George learns best by matching sounds to letters. So far he has learned four sounds /i/, /b/, /sh/, and /p/. Lets create some flash cards for each of these sounds! Below are some images generated by George, pick the one that best matches the sound displayed. If none of them are good, click regenerate to get a new set of images. Once you have clicked on an image, the flash card will be created. You can check out all created flashcards in the Progress Tracker tab.",        
        '5':'''George learns best by matching sounds to letters. So far he has learned four sounds: /b/, /p/, /sh/, and /i/. 
 
Now say the first sound: /p/. Let’s say it a few more times: /p/ /p/ /p/. /p/ is the first sound in words pat, pet, pit, pot, putt, and put. Can you hear the /p/ sound in those words?
 
Say the sound /p/. Notice what your lips are doing when you say /p/. They come together and blow a puff of air out. Put your hand in front of your mouth and say /p/. One more time? /p/ Do you feel the puff of air?
 
Put your hand on your throat where your voicebox is. Say /p/ again. Great!
 
Now move your lips in the exact same way and say /b/. Again? /b/ Notice how your lips are pursed together just like when you say /p/. Say /p/ /p/ /p/. Now say /b/ /b/ /b/.
 
What do you feel in your voicebox when you say /b/? Say /b/ again: /b/. Do you feel your voicebox vibrating under your hand? That’s because /b/ is a voiced sound. Its partner sound is /p/. Say /p/. No vibration in your voicebox. Now say /b/. Let’s say it a few more times /b/
 
Lets create some flash cards for each of these sounds! Below are some images generated by George, pick the one that best matches the sound displayed.
 
If none of them are good, click regenerate to get a new set of images. ''',
        '6':'''Welcome to the progress tracker! This is where you can see how George (and you!) is doing with his learning. 
                    Every time you create a flashcard (matching a sound to an image), it will show up here. Once you have reviewed 
                    the flash cards hit the link below to help George practice his sounds! If you forget what sound goes with which image,
                    just click on the image below! ''',   
        '7':"Now it's time to teach George! To begin, George will ask how to pronounce a sound, and it is up to you to pick the image that corresponds to that sound. ",
        '8': "What is the first sound in the word SHIP?",
        '9': "Enter franchise name then choose an action you want those characters to preform!",
        '10': "You've made it all the way to Game 3! Congrats! In this game, you will be spelling the word Ship with the sounds you have learned. George will say a sound and you will tell him if its the next sound in the word ship!"}




client = OpenAI(api_key=GPT_KEY)
for key, text in texts.items():
    if not os.path.exists(f"website/static/sounds/{key}_sound.mp3"):
        response = client.audio.speech.create(
            model="tts-1",
            voice="alloy",
            input=text
        )
        response.stream_to_file(f"website/static/sounds/{key}_sound.mp3")

if not os.path.exists(f"website/static/sounds/correct_sound.mp3"):
    response = client.audio.speech.create(
        model="tts-1",
        voice="alloy",
        input="Correct!"
    )
    response.stream_to_file(f"website/static/sounds/correct_sound.mp3")

if not os.path.exists(f"website/static/sounds/incorrect_sound.mp3"):
    response = client.audio.speech.create(
        model="tts-1",
        voice="alloy",
        input="Incorrect!"
    )
    response.stream_to_file(f"website/static/sounds/incorrect_sound.mp3")


sounds = {'sh':" This is how you say shhhhhhhhhhhh",
                "p":"This is how you say puhhh puhhh puhhh",
                "b":"This is how you say buuuuuh",
                "i":"This is how you say  iiiih"}

for key, sound in sounds.items():
    if not os.path.exists(f"website/static/sounds/{key}_sound2.mp3"):
        response = client.audio.speech.create(
            model="tts-1",
            voice="alloy",
            input=sound
        )
        response.stream_to_file(f"website/static/sounds/{key}_sound2.mp3")